\zml?|version="1.1"|;
\xml?|version="1.0",encoding="UTF-8"|;


\page<
  \name<再帰定理と整列可能定理>
  \use-math|prefix="4"|;

  \h1<日記 (2020 年 6 月 5 日)>
  \p<
    \a|href="48.html"|<5 月 31 日>と \a|href="49.html"|<6 月 1 日>の続き。
    今回は、再帰定理を証明し、その応用として整列可能定理を示す。
  >
  \p<
    順序数 &m<`a> を固定し、順序数 &m<`j `< `a> に関して定められた命題 &m<`F (`j)> を考える。
    超限帰納法の原理により、順序数 &m<`j `< `a> に関して命題 &m<`F (`j)> が成り立つことを示すためには、任意の順序数 &m<`h `< `j> に対して &m<`F (`h)> が成り立つことを仮定した上で &m<`F (`j)> が示されれば良いのであった。
    これから証明する再帰定理はこれに似ていて、順序数 &m<`j `< `a> に関して何らかの集合 &m<f (`j)> を構成するためには、任意の順序数 &m<`h `< `j> に対して &m<f (`h)> が構成されている状態で &m<f (`j)> を構成すれば良いということを保証するものである。
  >
  \thm|type="thm"|<
    \name<再帰定理\fl<recursion threorem>>
    \p<
      順序数 &m<`a> と集合 &m<R> に対し、写像 &m<r: \bigcup|in|<`j `< `a> \sp<R><`j> \to; R> が定まっているとする。
      このとき、写像 &m<f \in; \sp<R><`a>> が一意に存在して、任意の順序数 &m<`j `< `a> に対して &m<f (`j) = r (f \rvert; \sb<><`j>)> が成り立つ。
    >
  >
  \p<
    証明の前に、この定理の気持ちを述べておこう。
    順序数 &m<`a> と集合 &m<R> に対して、&m<R> の元からなる列 &m<(f (`j)) \sb<><`j `< `a>> を作りたいとする。
    定理によると、これを作るためには、写像 &m<r: \bigcup|in|<`j `< `a> \sp<R><`j> \to; R> を用意すれば良いことになる。
    この &m<r> の定義域である &m<\bigcup|in|<`j `< `a> \sp<R><`j>> は非交和になっているので、&m<r> を用意することは、各順序数 &m<`j `< `a> に対する写像 &m<\sb<r><`j>: \sp<R><`j> \to; R> たちの族を用意するのと同じである。
    この &m<\sb<r><`j>> は、最終的に作りたい列の途中までができている列 &m<(f (`h)) \sb<><`h `< `j>> から &m<f (`j)> を構成する役割を担っている。
    言い方を変えれば、&m<\sb<r><`j>> は、作りたい列が &m<`j> 番目の手前までできていると仮定した上で &m<`j> 番目の値を作る操作を表している。
    定理の主張は、このような操作の族が揃っていれば最終的に完全な列 &m<f> が構成できるということである。
    すなわち、再帰的な定義を正当化している。
  >
  \prf<
    \p<
      以下、集合 &m<R> は常に固定する。
      順序数 &m<`a> と写像 &m<r: \bigcup|in|<`j `< `a> \sp<R><`j> \to; R> をとる。
      写像 &m<f \in; \sp<R><`a>> に対して、
    >
    \ul<
      \li<
        任意の順序数 &m<`j `< `a> に対して &m<f (`j) = r (f \rvert; \sb<><`j>)> が成り立つ。
      >
    >
    \p<
      という条件のことを、条件 &m<\sb<\wspade;><`a> (r)> と呼ぶことにする。
      定理の主張は、条件 &m<\sb<\wspade;><`a> (r)> を満たす写像 &m<f \in; \sp<R><`a>> が一意に存在することである。
    >
    \p<
      まず、各順序数 &m<`a> と写像 &m<r: \bigcup|in|<`j `< `a> \sp<R><`j> \to; R> に対して、条件 &m<\sb<\wspade;><`a> (r)> を満たす &m<f> の一意性を示す。
      そのため、条件 &m<\sb<\wspade;><`a> (r)> を満たす &m<f, g \in; \sp<R><`a>> をとる。
      ここで、
      &mb<
        Z \coloneqq; `{`j \in; `a \mid; f (`j) = g (`j)`} \subseteq; `a
      >
      とおき、超限帰納法によって &m<Z = `a> を示す。
      これが示されれば、&m<f = g> となって一意性が得られる。
    >
    \p<
      任意に &m<`j \in; `a> をとり、&m<O (`j) \subseteq; Z> であるとする。
      &m<Z> の定義により、これは任意の &m<`h `< `j> について &m<f (`h) = g (`h)> であるということだが、それはすなわち &m<f \rvert; \sb<><`j> = g \rvert; \sb<><`j>> が成り立つということである。
      &m<f> と &m<g> は条件 &m<\sb<\wspade;><`a>> を満たすから、
      &mb<
        f (`j) = r (f \rvert; \sb<><`j>) = r (g \rvert; \sb<><`j>) = g (`j)
      >
      となり、&m<`j \in; Z> が示された。
    >
    \p<
      次に、任意の順序数 &m<`a> と写像 &m<r: \bigcup|in|<`j `< `a> \sp<R><`j> \to; R> に対して、条件 &m<\sb<\wspade;><`a> (r)> を満たす &m<f> の存在を示す。
      これは背理法による。
      そこで、ある順序数 &m<`a> と写像 &m<r: \bigcup|in|<`j `< `a> \sp<R><`j> \to; R> が存在して、条件 &m<\sb<\wspade;><`a> (r)> を満たす &m<f> が存在しないと仮定する。
      さらに、&m<`a> はそのような順序数のうち最小のものとする。
      &m<`a> が後続順序数か極限順序数かに応じて場合分けする。
    >
    \p<
      &m<`a> が後続順序数のとき。
      このとき、ある順序数 &m<`b> によって &m<`a = `b + 1> と書ける。
      &m<`b `< `a> であるから、&m<`a> の最小性によって、条件 &m<\sb<\wspade;><`b> (r)> を満たす写像 &m<\sb<f><`b> \in; \sp<R><`b>> は存在する。
      そこで、
      &mb<
        \array|align="rrcl"|<
          \c<\sb<f><`a>:> \c<`b + 1> \c<\longto;> \c<R> \br;
          \c; \c<`j> \c<\longmapsto;> \c<\case<
            \c<\sb<f><`b> (`j)> \c<(`j `< `b)> \br;
            \c<r (\sb<f><`b>)> \c<(`j = `b)>
          >>
        >
      >
      とおくと、この写像 &m<f \in; \sp<R><`a>> は条件 &m<\sb<\wspade;><`a> (r)> を満たすことが容易に分かる。
      これは矛盾である。
    >
    \p<
      &m<`a> が極限順序数のとき。
      任意の順序数 &m<`j `< `a> に対して、&m<`a> の最小性によって、条件 &m<\sb<\wspade;><`j> (r)> を満たす写像 &m<\sb<f><`j> \in; \sp<R><`j>> は存在する。
      &m<`a> が極限順序数であることから、&m<`j + 1 `< `a> であることに注意して、
      &mb<
        \array|align="rrcl"|<
          \c<\sb<f><`a>:> \c<`a> \c<\longto;> \c<R> \br;
          \c; \c<`j> \c<\longmapsto;> \c<\sb<f><`j + 1> (`j)>
        >
      >
      とおく。
    >
    \p<
      ここでまず、任意の順序数 &m<`j `< `a> に対して &m<\sb<f><`j + 1> \rvert; \sb<><`j> = \sb<f><`a> \rvert; \sb<><`j>> が成り立つことを示す。
      任意に元 &m<`h \in; `j> をとると、&m<\sb<f><`j + 1> \rvert; \sb<><`h + 1>> と &m<\sb<f><`h + 1>> はともに条件 &m<\sb<\wspade;><`h + 1> (r)> を満たす。
      すでに示したようにそのような写像は一意だから、&m<\sb<f><`j + 1> \rvert; \sb<><`h + 1> = \sb<f><`h + 1>> が成り立つ。
      したがって、特に
      &mb<
        \sb<f><`j + 1> (`h) = \sb<f><`j + 1> \rvert; \sb<><`h + 1> (`h) = \sb<f><`h + 1> (`h) = \sb<f><`a> (`h)
      >
      が成り立つ。
      &m<`h> は任意にとったので、&m<\sb<f><`j + 1> \rvert; \sb<><`j> = \sb<f><`a> \rvert; \sb<><`j>> が示された。
    >
    \p<
      この事実を用いると、任意の順序数 &m<`j `< `a> に対して、
      &mb<
        \sb<f><`a> (`j) = \sb<f><`j + 1> (`j) = h (\sb<f><`j + 1> \rvert; \sb<><`j>) = h (\sb<f><`a> \rvert; \sb<><`j>)
      >
      が成り立つので、&m<\sb<f><`a>> は条件 &m<\sb<\wspade;><`a> (r)> を満たす。
      これは矛盾である。
    >
    \p<
      どちらの場合でも矛盾が導かれたので、これで証明が完了した。
    >
  >
  \p<
    再帰定理の応用として、整列可能定理を示す。
    その証明で用いるので、ここで置換公理図式と選択公理について復習しておく。
    特に、選択公理は整列可能定理と (他の公理を仮定した上で) 同値であることが知られている。
  >
  \thm|type="axm"|<
    \name<置換公理図式\fl<axiom schema of replacement>>
    \p<
      2 変数の論理式 &m<`F> があり、任意の集合 &m<x> に対して集合 &m<y> が一意に存在して &m<`F (x, y)> が成立するとする。
      このとき、任意の集合 &m<X> に対してある集合 &m<Y> が存在し、&m<y \in; Y> であることが、ある &m<x \in; X> が存在して &m<`F (x, y)> が成り立つことと同値になる。
    >
  >
  \p<
    この公理図式から、ある集合 &m<X> の元 &m<x> に対して、(ある一定の集合に属しているとは限らない) 何らかの集合 &m<F (x)> を構成する操作があるとき、そのようにして作られる &m<F (x)> たちの集まり全体も集合になるということが分かる。
  >
  \thm|type="axm"|<
    \name<選択公理\fl<axiom of choice>>
    \p<
      空でない集合から成る集合 &m<\scr<F>> に対し、関数 &m<`G: \scr<F> \to; \bigcup|in|; \scr<F>> が存在し、任意の &m<S \in; \scr<F>> に対して &m<`G (S) \in; S> が成り立つ。
      なお、&m<`G> は &m<\scr<F>> 上の\em<選択関数\fl<choice function>> と呼ばれる。
    >
  >
  \p<
    さて、再帰定理の応用として次の整列可能定理を示す。
  >
  \thm|type="thm",id="wellthm"|<
    \name<整列可能定理\fl<well-ordering theorem>>
    \p<
      任意の集合 &m<X> に対し、&m<X> 上の整列順序が存在する。
    >
  >
  \p<
    厳密な証明に入る前に、証明の方針を軽く述べておく。
    証明の最終的な目標は、ある順序数から &m<X> への全単射を作ることである。
    これを作ることができれば、順序数に定まっている整列順序をそのまま使って &m<X> に整列順序を定めることができる。
    そのために、十分大きな順序数 &m<`a> をとって、&m<X> の元もしくは後述する特殊な元 &m<\bot;> のどちらかから成る列 &m<(f (`j)) \sb<><`j `< `a>> を、再帰的に次のように構成することを考える。
    &m<`j> 番目の手前まで列が構成できていたとして、そこまででまだ現れていない &m<X> の元を新しくとって &m<f (`j)> とする。
    もし、&m<`j> 番目の手前までで &m<X> の元をとり尽くしてしまっていたら、そのことを明示するために &m<\bot;> という特殊な元を用意してそれを &m<f (`j)> とする。
    このようにすると、列 &m<(f (`j)) \sb<><`j `< `a>> は、下から順に &m<X> の元が相異なるように入っていて、&m<X> の元を全てとり尽くしたらそれ以降はずっと &m<\bot;> が入っているものになっている。
    したがって、初めて &m<\bot;> が現れる地点のすぐ手前でこの列を切れば、順序数から &m<X> への全単射が得られたことになる。
  >
  \prf<
    \p<
      まず、
      &mb<
        \scr<F> \coloneqq; \set<\op<ord> (Y, \preceq|ord|;)><\array|align="l"|<
          \cc<Y \in; \frak<P> (X), \preceq|ord|; \in; \frak<P> (X \times; X)>
          \cc<&raw<&m<\preceq;> は &m<Y> 上の整列順序>>
        >>
      >
      とおくと、置換公理図式によってこれは集合である。
      これは、
      &mb<
        \scr<F> = \set<`j><\array|align="l"|<
          \cc<&raw<&m<`j> は順序数>>
          \cc<&raw<単射 &m<f: `j \to; X> が存在する>>
        >>
      >
      とも書ける。
      ここで、順序数 &m<`a> であって &m<`a \nin; \scr<F>> なるものをとって固定する。
      そのためには、例えば &m<`a \coloneqq; \bigcup|in|; \scr<F> + 1> とすれば良い。
    >
    \p<
      ある集合 &m<\bot;> であって &m<\bot; \nin; X> なるものをとる。
      例えば &m<\bot; \coloneqq; X> とすれば良い。
      さらに、&m<\frak<P> (X) \setminus; `{\empty;`}> 上の選択関数を &m<`G: \frak<P> (X) \setminus; `{\empty;`} \to; X> とする。
      このとき、
      &mb<
        \array|align="rrcl"|<
          \c<r:> \c<\bigcup<`j `< `a> \sp<(X \cup; `{\bot;`})><`j>> \c<\longto;> \c<X \cup; `{\bot;`}> \br;
          \c; \c<h> \c<\longmapsto;> \c<\case<
            \c<`G (X \setminus; \op<Im> h)> \c<(X \setminus; \op<Im> h \neq; \empty;)> \br;
            \c<\bot;> \c<(X \setminus; \op<Im> h = \empty;)>
          >>
        >
      >
      と定める。
      すると、再帰定理により、写像 &m<f \in; \sp<(X \cup; `{\bot;`})><`a>> が存在し、任意の順序数 &m<`j `< `a> に対して、
      &mb<
        &mark<\wheart;>
        f (`j) = r (f \rvert; \sb<><`j>) = \case<
          \c<`G (X \setminus; f `[`j`])> \c<(X \setminus; f `[`j`] \neq; \empty;)> \br;
          \c<\bot;> \c<(X \setminus; f `[`j`] = \empty;)>
        >
      >
      が成り立つ。
    >
    \p<
      ここで、順序数 &m<`b \leq; `a> に対して、&m<\bot; \nin; f `[`b`]> ならば &m<f \rvert; \sb<><`b>: `b \to; X> は単射であることを示す。
      任意に相異なる元 &m<`j, `j' \in; `b> をとる。
      &m<`j `< `j'> と仮定して良い。
      すると、&m<\bot; \nin; f `[`b`]> であることから &m<f (`j') \neq; \bot;> なので、式 &m<\wheart;> によって、
      &mb<
        f (`j') = `G (X \setminus; f `[`j'`]) \in; X \setminus; f `[`j'`]
      >
      が成り立つ。
      一方、&m<`j `< `j'> より &m<`j \in; `j'> であるから、&m<f (`j) \in; f `[`j'`]> が成り立つ。
      これより、&m<f (`j) \neq; f (`j')> でなければならない。
      以上により、&m<f \rvert; \sb<><`b>> が単射であることが示された。
    >
    \p<
      次に、&m<\bot; \in; f `[`a`]> であることを示す。
      仮に &m<\bot; \nin; f `[`a`]> であるとすると、上の議論によって &m<f \rvert; \sb<><`a>: `a \to; X> は単射である。
      したがって、&m<\scr<F>> の定義によって &m<`a \in; \scr<F>> であるが、そもそも &m<`a> は &m<`a \nin; \scr<F>> が成り立つようにとったのだからこれは矛盾である。
      以上により、&m<\bot; \in; f `[`a`]> が示された。
    >
    \p<
      このことから、
      &mb<
        S \coloneqq; `{`b \in; `a \mid; f (`b) = \bot;`} \subseteq; `a
      >
      とおくと &m<S \neq; \empty;> が成り立つので、&m<`b \coloneqq; \min; S> がとれる。
      &m<`b> の最小性によって &m<\bot; \nin; f `[`b`]> であるから、前の議論によって &m<f \rvert; \sb<><`b>: `b \to; X> は単射である。
      また、&m<f (`b) = \bot;> であるから、式 &m<\wheart;> により &m<X \setminus; f `[`b`] = \empty;> でなければならないので、&m<f \rvert; \sb<><`b>: `b \to; X> は全射でもある。
      以上をまとめると、&m<f \rvert; \sb<><`b>: `b \to; X> は全単射であるから、&m<X> 上の関係 &m<\preceq;> を、
      &mb<
        x \preceq; x' \coloniff; \sp<f><-1> (x) \leq; \sp<f><-1> (x')
      >
      で定めれば、&m<`b> が整列集合であることからこれは整列順序になる。
      これが示したかったことであった。
    >
  >
  \h1<参考文献>
  \ol<
    \li|id="stw"|<K. Ciesielski (1997)『Set Theory for the Working Mathematician』Cambridge University Press>
 >

>